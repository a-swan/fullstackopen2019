{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\alexpswanson\\\\source\\\\repos\\\\fullstackopen2019\\\\2. Communicating with the Server\\\\courseinfo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = ({\n  course\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, \" \", course.name, \" \");\n\nconst Part = ({\n  part\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \" \", part.name, \" \", part.exercises, \" \");\n\nconst Content = ({\n  parts\n}) => {\n  console.log('inside Content', parts);\n\n  const listParts = () => parts.map(part => React.createElement(Part, {\n    key: part.id,\n    part: part,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n\n  const total = parts.reduce((totalEx, partIter) => {\n    console.log('inside total', totalEx, partIter);\n    return totalEx + partIter.exercises;\n  }, 0);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, listParts(), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"total of \", total, \" exercises\"));\n};\n\nconst Course = ({\n  course\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(Header, {\n  course: course,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(Content, {\n  parts: course.parts,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}));\n\nconst App = () => {\n  const course = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n\n  const listCourses = () => course.map(courseIter => React.createElement(Course, {\n    key: courseIter.id,\n    course: courseIter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, listCourses());\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["D:\\Users\\alexpswanson\\source\\repos\\fullstackopen2019\\2. Communicating with the Server\\courseinfo\\src\\index.js"],"names":["React","ReactDOM","Header","course","name","Part","part","exercises","Content","parts","console","log","listParts","map","id","total","reduce","totalEx","partIter","Course","App","listCourses","courseIter","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Header = ({ course }) => <h1> {course.name} </h1>\r\n\r\nconst Part = ({ part }) => <p> {part.name} {part.exercises} </p>\r\n\r\nconst Content = ({ parts }) => {\r\n    console.log('inside Content',parts)\r\n    const listParts = () => parts.map(part => <Part key={part.id} part={part}/>)\r\n    const total = parts.reduce((totalEx, partIter) => {\r\n        console.log('inside total', totalEx, partIter)\r\n        return totalEx + partIter.exercises\r\n    }, 0)\r\n\r\n    return (\r\n        <div>\r\n            {listParts()}\r\n            <strong>total of {total} exercises</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Course = ({ course }) => (\r\n    <div>\r\n        <Header course={course} />\r\n        <Content parts={course.parts} />\r\n    </div>\r\n)\r\n\r\nconst App = () => {\r\n    const course = [\r\n        {\r\n            name: 'Half Stack application development',\r\n            id: 1,\r\n            parts: [\r\n                {\r\n                    name: 'Fundamentals of React',\r\n                    exercises: 10,\r\n                    id: 1\r\n                },\r\n                {\r\n                    name: 'Using props to pass data',\r\n                    exercises: 7,\r\n                    id: 2\r\n                },\r\n                {\r\n                    name: 'State of a component',\r\n                    exercises: 14,\r\n                    id: 3\r\n                },\r\n                {\r\n                    name: 'Redux',\r\n                    exercises: 11,\r\n                    id: 4\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Node.js',\r\n            id: 2,\r\n            parts: [\r\n                {\r\n                    name: 'Routing',\r\n                    exercises: 3,\r\n                    id: 1\r\n                },\r\n                {\r\n                    name: 'Middlewares',\r\n                    exercises: 7,\r\n                    id: 2\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const listCourses = () => course.map(courseIter => <Course key={courseIter.id} course={courseIter} />)\r\n\r\n    return (\r\n        <div>\r\n            {listCourses()}\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}