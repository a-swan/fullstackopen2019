{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/Persons.js","components/Notification.js","components/ErrorMessage.js","App.js","index.js"],"names":["Filter","filterValue","handleFilter","value","onChange","PersonForm","handleSubmit","newName","handleNewPerson","newPhone","handleNewPhone","onSubmit","type","Person","persons","handleDelete","console","log","map","person","key","name","number","id","onClick","baseUrl","axios","get","newObject","post","delete","updatedObject","put","then","response","data","Notification","message","className","ErrorMessage","App","useState","setPersons","setNewName","setNewPhone","showAll","setShowAll","errorMessage","setErrorMessage","notMessage","setNotMessage","useEffect","personService","length","personsToShow","filter","toUpperCase","includes","event","target","preventDefault","personObject","duplicate","reduce","dup","iter","replaceNumber","window","confirm","catch","error","setTimeout","concat","deletedID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7284471.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterValue, handleFilter }) => {\r\n    return(\r\n        <div>\r\n            filter: <input value={filterValue} onChange={handleFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ handleSubmit, newName, handleNewPerson, newPhone, handleNewPhone }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNewPerson} /><br />\r\n                phone: <input value={newPhone} onChange={handleNewPhone} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ persons, handleDelete }) => {\r\n    console.log('persons: ', persons)\r\n    const listPersons = () => persons.map(person => <li key={person.name}>{person.name} {person.number} <button id={person.id} onClick={handleDelete}>delete</button></li>)\r\n\r\n    return (\r\n        <div>\r\n            {listPersons()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n    console.log(`${baseUrl}/${id}`)\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, updatedObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    \r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"errorMessage\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Person from './components/Person'\r\nimport personService from './services/Persons'\r\nimport Notification from './components/Notification'\r\nimport ErrorMessage from './components/ErrorMessage'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhone, setNewPhone] = useState('')\r\n    const [showAll, setShowAll] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [notMessage, setNotMessage] = useState(null)\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                console.log('promise fulfilled', response)\r\n                setPersons(response.data)\r\n            })\r\n    }, [])\r\n    console.log('render', persons.length, 'people')\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newPhone\r\n        }\r\n\r\n        //check if duplicate\r\n        const duplicate = persons.reduce((dup, iter) => {\r\n            console.log('newName in iter', iter.name === newName)\r\n\r\n            if (iter.name === newName) {\r\n                console.log('alert:', newName, ' is a duplicate in phonebook, replace number?')\r\n                const replaceNumber = window.confirm(`${newName} is already in phonebook, replace the old number with new one?`)\r\n                console.log(\"replace: \", replaceNumber)\r\n\r\n                if (replaceNumber) {\r\n                    personService\r\n                        .update(iter.id, personObject)\r\n                        .then(response => {\r\n                            console.log(\"update response\", response)\r\n                            setPersons(persons.map(person => person.id === response.id ? response : person))\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error)\r\n                            setErrorMessage(`Information of ${newName} has already been deleted from the server`)\r\n                            setTimeout(() => {\r\n                                setErrorMessage(null)\r\n                            }, 5000)\r\n                        })\r\n                }\r\n\r\n                return true\r\n            }\r\n            return false\r\n        }, false)\r\n\r\n        console.log('duplicate = ', duplicate)\r\n\r\n        //if not duplicate update state\r\n        if (!duplicate) {\r\n            personService\r\n                .create(personObject)\r\n                .then(response => {\r\n                    console.log(\"add response\", response)\r\n                    setPersons(persons.concat(response.data))\r\n                    setNotMessage(\r\n                        `Added ${newName}`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setNotMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(error.response.data.error)\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                    console.log(error.response.data)\r\n                })\r\n        }\r\n\r\n        //refresh text field\r\n        setNewName('')\r\n        setNewPhone('')\r\n    }\r\n\r\n    const deletePerson = (event) => {\r\n        console.log('delete ', event.target.id)\r\n\r\n        const deletedID = event.target.id\r\n\r\n        personService\r\n            .remove(deletedID)\r\n            .then(response => {\r\n                console.log(\"removed\", response.data)\r\n                setPersons(persons.filter(person => person.id !== deletedID))\r\n            })\r\n    }\r\n\r\n    const personsToShow = showAll === '' ? persons : persons.filter(person => person.name.toUpperCase().includes(showAll.toUpperCase()))\r\n\r\n    const handleNewPerson = (event) => {\r\n        console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNewPhone = (event) => {\r\n        console.log(event.target.value)\r\n        setNewPhone(event.target.value)\r\n    }\r\n\r\n    const handleFilter = (event) => {\r\n        console.log(event.target.value)\r\n        setShowAll(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Filter filterValue={showAll} handleFilter={handleFilter} />\r\n\r\n            <Notification message={notMessage} />\r\n            <ErrorMessage message={errorMessage} />\r\n\r\n            <h2>Add a New User</h2>\r\n            <PersonForm handleSubmit={addPerson} newName={newName} handleNewPerson={handleNewPerson} newPhone={newPhone} handleNewPhone={handleNewPhone} />\r\n\r\n            <h2>Numbers</h2>\r\n            <Person persons={personsToShow} handleDelete={deletePerson} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}