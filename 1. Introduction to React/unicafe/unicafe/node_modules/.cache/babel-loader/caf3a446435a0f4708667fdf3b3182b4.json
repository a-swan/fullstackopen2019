{"ast":null,"code":"import _slicedToArray from \"D:\\\\Users\\\\alexpswanson\\\\source\\\\repos\\\\unicafe\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Users\\\\alexpswanson\\\\source\\\\repos\\\\unicafe\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = ({\n  title\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, title);\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, text);\n\nconst Stat = ({\n  stat,\n  text\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, text, \" \", stat);\n\nconst App = () => {\n  //save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1]; //headers\n\n\n  const titles = ['give feedback', 'statistics']; //click handlers\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: titles[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Header, {\n    title: titles[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    stat: good,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    stat: neutral,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    stat: bad,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["D:\\Users\\alexpswanson\\source\\repos\\unicafe\\unicafe\\src\\index.js"],"names":["React","useState","ReactDOM","Header","title","Button","onClick","text","Stat","stat","App","good","setGood","neutral","setNeutral","bad","setBad","titles","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\n\nconst Header = ({ title }) => <h1>{title}</h1>\n\nconst Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n        {text}\n    </button>\n)\n\nconst Stat = ({ stat, text }) => (\n    <p>\n        {text} {stat}\n    </p>\n)\n\nconst App = () => {\n    //save clicks of each button to own state\r\n    const [good, setGood] = useState(0)\r\n    const [neutral, setNeutral] = useState(0)\r\n    const [bad, setBad] = useState(0)\r\n\r\n    //headers\r\n    const titles = ['give feedback', 'statistics']\r\n\r\n    //click handlers\r\n    const handleGoodClick = () => {\r\n        setGood(good + 1)\r\n    }\r\n    const handleNeutralClick = () => {\r\n        setNeutral(neutral + 1)\r\n    }\r\n    const handleBadClick = () => {\r\n        setBad(bad + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title={titles[0]} />\r\n            <Button onClick={handleGoodClick} text='good' />\r\n            <Button onClick={handleNeutralClick} text='neutral' />\r\n            <Button onClick={handleBadClick} text='bad' />\r\n\r\n            <Header title={titles[1]} />\r\n            <Stat stat={good} text='good' />\r\n            <Stat stat={neutral} text='neutral' />\r\n            <Stat stat={bad} text='bad' />\r\n        </div>\r\n    )\r\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}