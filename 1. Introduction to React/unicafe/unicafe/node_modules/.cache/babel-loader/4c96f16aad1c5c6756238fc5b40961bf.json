{"ast":null,"code":"import _slicedToArray from \"D:\\\\Users\\\\alexpswanson\\\\source\\\\repos\\\\unicafe\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Users\\\\alexpswanson\\\\source\\\\repos\\\\unicafe\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = ({\n  title\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, title);\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, text);\n\nconst Stat = ({\n  text,\n  value\n}) => React.createElement(React.Fragment, null, text, \" \", value);\n\nconst Stats = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const all = good + neutral + bad;\n  const ave = (good - bad) / all;\n  const pos = good / all * 100 + \"%\";\n\n  if (all === 0) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"No feedback given\");\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Stat, {\n    text: \"good\",\n    value: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    text: \"neutral\",\n    value: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    text: \"bad\",\n    value: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    text: \"all\",\n    value: all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    text: \"average\",\n    value: ave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Stat, {\n    text: \"positive\",\n    value: pos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  //save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1]; //headers\n\n\n  const titles = ['give feedback', 'statistics'];\n  const tags = ['good', 'neutral', 'bad', 'all', 'average', 'positive']; //click handlers\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: titles[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Header, {\n    title: titles[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    tags: tags,\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["D:\\Users\\alexpswanson\\source\\repos\\unicafe\\unicafe\\src\\index.js"],"names":["React","useState","ReactDOM","Header","title","Button","onClick","text","Stat","value","Stats","good","neutral","bad","all","ave","pos","App","setGood","setNeutral","setBad","titles","tags","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\n\nconst Header = ({ title }) => <h1>{title}</h1>\n\nconst Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n        {text}\n    </button>\n)\n\nconst Stat = ({ text, value }) => (\n    <>\r\n        {text} {value}\r\n    </>\r\n)\n\nconst Stats = ({ good, neutral, bad }) => {\n    const all = good + neutral + bad\n    const ave = (good - bad) / all\n    const pos = (good / all)*100+\"%\"\n\n    if (all === 0) {\n        return (\r\n            <p>\r\n                No feedback given\r\n            </p>\r\n        )\r\n    }\n\n    return (\n        <p>\n            <Stat text=\"good\" value={good} />\n            <Stat text=\"neutral\" value={neutral} />\n            <Stat text=\"bad\" value={bad} />\n            <Stat text=\"all\" value={all} />\n            <Stat text=\"average\" value={ave} />\n            <Stat text=\"positive\" value={pos} />\n        </p>\n    )\n}\n\nconst App = () => {\n    //save clicks of each button to own state\r\n    const [good, setGood] = useState(0)\r\n    const [neutral, setNeutral] = useState(0)\r\n    const [bad, setBad] = useState(0)\r\n\r\n    //headers\r\n    const titles = ['give feedback', 'statistics']\r\n    const tags = ['good', 'neutral', 'bad', 'all', 'average', 'positive']\r\n\r\n    //click handlers\r\n    const handleGoodClick = () => {\r\n        setGood(good + 1)\r\n    }\r\n    const handleNeutralClick = () => {\r\n        setNeutral(neutral + 1)\r\n    }\r\n    const handleBadClick = () => {\r\n        setBad(bad + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title={titles[0]} />\r\n            <Button onClick={handleGoodClick} text='good' />\r\n            <Button onClick={handleNeutralClick} text='neutral' />\r\n            <Button onClick={handleBadClick} text='bad' />\r\n\r\n            <Header title={titles[1]} />\r\n            <Stats tags={tags} good={good} neutral={neutral} bad={bad} />\r\n        </div>\r\n    )\r\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}